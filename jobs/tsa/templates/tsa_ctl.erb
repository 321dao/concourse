#!/bin/bash

set -e

<%
  require "cgi"
  require "shellwords"

  def esc(x)
    Shellwords.shellescape(x)
  end
%>

RUN_DIR=/var/vcap/sys/run/tsa
LOG_DIR=/var/vcap/sys/log/tsa
PIDFILE=$RUN_DIR/tsa.pid
SIGNING_KEY=/var/vcap/packages/generated_signing_key/id_rsa

source /var/vcap/packages/pid_utils/pid_utils.sh

case $1 in

  start)
    pid_guard $PIDFILE "tsa"

    mkdir -p $RUN_DIR
    chown -R vcap:vcap $RUN_DIR

    mkdir -p $LOG_DIR
    chown -R vcap:vcap $LOG_DIR

    echo $$ > /var/vcap/sys/run/tsa/tsa.pid

    for key in /var/vcap/packages/generated_tsa_host_key/id_rsa \
               /var/vcap/jobs/tsa/config/host_key \
               $SIGNING_KEY; do
      chown vcap:vcap $key
      chmod 0400 $key
    done

    {
<% if p("tsa.authorize_generated_worker_key") %>
      cat /var/vcap/packages/generated_worker_key/id_rsa.pub
<% end %>
      cat <<EOF
<%= p("tsa.authorized_keys").join("\n") %>
EOF
    } > /var/vcap/jobs/tsa/config/authorized_keys

    # TODO: handle multiple ATCs
    exec chpst -u vcap:vcap /var/vcap/packages/tsa/bin/tsa \
      <% link("atc").each do |node| %> \
      -atcAPIURL=<%= "http://#{node.address}:#{node.p("port")}" %> \
      <% end %> \
      -forwardHost=<%= p("tsa.forward_host", my_addr) %> \
      <% if p("tsa.host_key") != "" %> \
      -hostKey=/var/vcap/jobs/tsa/config/host_key \
      <% else %> \
      -hostKey=/var/vcap/packages/generated_tsa_host_key/id_rsa \
      <% end %> \
      -authorizedKeys=/var/vcap/jobs/tsa/config/authorized_keys \
      -heartbeatInterval=<%= p("tsa.heartbeat_interval") %> \
      -yellerAPIKey=<%= esc(p("tsa.yeller.api_key")) %> \
      -sessionSigningKey $SIGNING_KEY \
      -yellerEnvironment=<%= esc(p("tsa.yeller.environment_name")) %> \
      1>>$LOG_DIR/tsa.stdout.log \
      2>>$LOG_DIR/tsa.stderr.log

    ;;

  stop)
    kill_and_wait $PIDFILE

    ;;

  *)
    echo "Usage: $0 {start|stop}"

    ;;

esac
