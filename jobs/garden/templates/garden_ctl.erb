#!/bin/bash -e

RUN_DIR=/var/vcap/sys/run/garden
LOG_DIR=/var/vcap/sys/log/garden
PIDFILE=$RUN_DIR/garden.pid
DATA_DIR=/var/vcap/data/garden

source /var/vcap/packages/pid_utils/pid_utils.sh

case $1 in

  start)
    pid_guard $PIDFILE "Garden"

    mkdir -p $RUN_DIR
    mkdir -p $DATA_DIR
    mkdir -p $LOG_DIR

    mkdir -p $DATA_DIR/depot

    # aufs setup
    dpkg -i /var/vcap/packages/aufs/aufs-tools_20110410-1_amd64.deb

    export PATH=/var/vcap/packages/iptables/sbin:$PATH
    export PATH=/var/vcap/packages/shadow/sbin:$PATH

    echo $$ > /var/vcap/sys/run/garden/garden.pid

    exec /var/vcap/packages/garden-linux/bin/garden-linux \
      -disableQuotas=true \
      -listenNetwork=<%= p("garden.listen_network") %> \
      -listenAddr=<%= p("garden.listen_address") %> \
      -denyNetworks=<%= p("garden.deny_networks").join(",") %> \
      -allowNetworks=<%= p("garden.allow_networks").join(",") %> \
      -networkPool=10.234.0.0/22 \
      -depot=${DATA_DIR}/depot \
      -graph=${DATA_DIR}/graph \
      -bin=/var/vcap/packages/garden-linux/src/github.com/cloudfoundry-incubator/garden-linux/linux_backend/bin \
      -overlays=${DATA_DIR}/overlays \
      -snapshots=${DATA_DIR}/snapshots \
      -containerGraceTime=5m \
      1>>$LOG_DIR/garden.stdout.log \
      2>>$LOG_DIR/garden.stderr.log

    ;;

  stop)
    pid=$(cat $PIDFILE)

    for i in $(seq 30); do
      echo "sending TERM to ${pid}..."
      if kill $pid; then
        sleep 1
      else
        echo "exited"
        exit 0
      fi
    done

    echo "timed out; sending SIGQUIT followed by SIGKILL to ${pid}..."
    if kill -QUIT $pid; then
      sleep 5

      echo "killing ${pid}..."
      kill -9 $pid
    fi

    echo "killed"

    ;;

  *)
    echo "Usage: ${0} {start|stop}"

    ;;

esac
