#!/bin/bash
# vim: set ft=sh

<% require "shellwords" %>

RUN_DIR=/var/vcap/sys/run/atc
LOG_DIR=/var/vcap/sys/log/atc
PIDFILE=$RUN_DIR/atc.pid

source /var/vcap/packages/pid_utils/pid_utils.sh

<%
  def discover_external_ip
    networks = spec.networks.marshal_dump

    _, network = networks.find do |_name, network_spec|
      network_spec.default
    end

    if !network
      _, network = networks.first
    end

    if !network
      raise "Could not determine IP via network spec: #{networks}"
    end

    network.ip
  end

  my_ip = discover_external_ip
%>

case $1 in

  start)
    pid_guard $PIDFILE "atc"

    mkdir -p $RUN_DIR
    mkdir -p $LOG_DIR

    echo $$ > /var/vcap/sys/run/atc/atc.pid

    exec /var/vcap/packages/atc/bin/atc \
      -pipeline=/var/vcap/jobs/atc/config/pipeline.yml \
      -templates=/var/vcap/packages/atc/templates \
      -public=/var/vcap/packages/atc/public \
      -externalAddress=<%= my_ip %> \
      -webListenPort=<%= p("atc.web_listen_port") %> \
      -webListenAddress=<%= p("atc.web_listen_address") %> \
      -turbineURL=http://<%= p("atc.turbine.address") %> \
      -sqlDataSource="postgres://<%= p("atc.postgresql.role.name") %>:<%= p("atc.postgresql.role.password") %>@<%= p("atc.postgresql.address") %>/<%= p("atc.postgresql.database") %>?sslmode=disable" \
      -httpUsername=<%= p("atc.basic_auth_username") %> \
      -httpHashedPassword=<%= Shellwords.shellescape(p("atc.basic_auth_encrypted_password")) %> \
      -publiclyViewable=<%= p("atc.publicly_viewable").inspect %> \
      1>>$LOG_DIR/atc.stdout.log \
      2>>$LOG_DIR/atc.stderr.log

    ;;

  stop)
    kill_and_wait $PIDFILE

    ;;

  *)
    echo "Usage: $0 {start|stop}"

    ;;

esac
