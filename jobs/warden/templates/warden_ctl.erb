#!/bin/bash -e

RUN_DIR=/var/vcap/sys/run/warden
LOG_DIR=/var/vcap/sys/log/warden
PIDFILE=$RUN_DIR/warden.pid
DATA_DIR=/var/vcap/data/warden

source /var/vcap/packages/pid_utils/pid_utils.sh

case $1 in

  start)
    pid_guard $PIDFILE "Warden"

    mkdir -p $RUN_DIR
    mkdir -p $DATA_DIR
    mkdir -p $LOG_DIR

    mkdir -p $DATA_DIR/depot

    echo $$ > /var/vcap/sys/run/warden/warden.pid

    # aufs setup
    dpkg -i /var/vcap/packages/aufs/aufs-tools_20110410-1_amd64.deb

    # make sure /dev/shm is large enough; bosh-lite has insane defaults
    mkdir -p /dev/shm
    mount -t tmpfs -o remount,size=512m tmpfs /dev/shm

    export PATH=/var/vcap/packages/iptables/sbin:$PATH
    export PATH=/var/vcap/packages/shadow/sbin:$PATH

    exec /var/vcap/packages/warden-linux/bin/warden-linux \
      -disableQuotas=true \
      -listenNetwork=<%= p("warden.listen_network") %> \
      -listenAddr=<%= p("warden.listen_address") %> \
      -denyNetworks=<%= p("warden.deny_networks").join(",") %> \
      -allowNetworks=<%= p("warden.allow_networks").join(",") %> \
      -networkPool=10.234.0.0/22 \
      -depot=${DATA_DIR}/depot \
      -graph=${DATA_DIR}/graph \
      -bin=/var/vcap/packages/warden-linux/src/github.com/cloudfoundry-incubator/warden-linux/linux_backend/bin \
      -overlays=${DATA_DIR}/overlays \
      -snapshots=${DATA_DIR}/snapshots \
      -containerGraceTime=5m \
      1>>$LOG_DIR/warden.stdout.log \
      2>>$LOG_DIR/warden.stderr.log

    ;;

  stop)
    kill_and_wait $PIDFILE

    ;;

  *)
    echo "Usage: warden_ctl {start|stop}"

    ;;

esac
