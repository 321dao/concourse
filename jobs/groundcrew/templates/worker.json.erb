<%=
  current_instance = link("groundcrew").instances.find { |i| i.id == spec.id }

  garden_addr = ""

  if_link("garden") do |garden|
    instance = garden.instances.find { |i| i.id == spec.id }
    if instance
      garden_addr = "#{instance.address}:#{instance.p("garden.bind_port")}"
    end
  end

  # no garden link found (probably release didn't support it); assume it's
  # colocated
  if garden_addr.empty?
    garden_addr = "#{current_instance.address}:7777"
  end

  baggageclaim_url = ""

  if_link("baggageclaim") do |baggageclaim|
    instance = baggageclaim.instances.find { |i| i.id == spec.id }
    if instance
      port = "7788"
      # TODO: port = instance.p("baggageclaim.bind_port")
      baggageclaim_url = "http://#{instance.address}:#{port}"
    end
  end

  def merge_resource_types(base_resource_types, additional_resource_types)
    merged_resource_types = {}

    base_resource_types.each do |resource_type|
      merged_resource_types[resource_type.fetch("type")] = resource_type.fetch("image")
    end

    additional_resource_types.each do |resource_type|
      merged_resource_types[resource_type.fetch("type")] = resource_type.fetch("image")
    end

    merged_resource_types.map do |type, image|
      {
        "type" => type,
        "image" => image,
      }
    end
  end

  {
    "name" => "HOSTNAME_REPLACE_ME",

    "platform" => p("groundcrew.platform"),
    "tags" => p("groundcrew.tags"),

    "addr" => garden_addr,
    "baggageclaim_url" => baggageclaim_url,

    "resource_types" => merge_resource_types(
      p("groundcrew.resource_types"),
      p("groundcrew.additional_resource_types")
    ),
  }.to_json
%>
