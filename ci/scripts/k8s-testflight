#!/bin/bash
set -e

mkdir -p ~/.kube
echo "$KUBE_CONFIG" > ~/.kube/config

pushd charts/stable/concourse/

helm init --client-only
helm dependency update
helm upgrade -f values.yaml --set image="concourse/concourse-rc" --set imageTag="4.0.0-rc.17" "$RELEASE_NAME" . --wait --timeout 300

while kubectl get pods | grep funky-sloth-web | grep "0/1" > /dev/null; do
  echo "Web node not ready. Sleeping for 10s and trying again..."
  sleep 10
done

external_ip=$(kubectl get svc "$RELEASE_NAME"-web -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
pod_name=$(kubectl get po -l app="$RELEASE_NAME"-web -o jsonpath='{.items[0].metadata.name}')
internal_ip=$(kubectl get po "$pod_name" -o jsonpath='{.status.podIP}')

bearer_token=$(curl -u fly:Zmx5 "http://$external_ip:8080/sky/token?grant_type=password&username=test1&password=test1&scope=openid+profile+email+federated:id+groups" | jq -r '.access_token')
echo $bearer_token
ports=$(curl -H"Authorization:Bearer $bearer_token" "http://$external_ip:8080/api/v1/workers" | jq -r '.[] | .addr,.baggageclaim_url' | awk -F: '{print $NF}')

pids=""
for port in $ports; do
  iptables -t nat -A OUTPUT -m tcp -p tcp -d "$internal_ip" --dport "$port" -j DNAT --to-destination 127.0.0.1:"$port"
  kubectl port-forward "$pod_name" "$port":"$port" >/dev/null &
  pids+="$! "
done
trap "kill $pids" EXIT

popd

ATC_URL="http://$external_ip:8080" ATC_USERNAME="test1" ATC_PASSWORD="test1" concourse/ci/scripts/testflight
