#!/bin/bash
set -eo pipefail

mkdir -p ~/.kube
echo "$KUBE_CONFIG" > ~/.kube/config
version=$(cat version/version)
app="${RELEASE_NAME}-web"

pushd charts/stable/concourse/

helm init --client-only
helm dependency update
helm upgrade -f values.yaml \
  --set image="concourse/concourse-rc" \
  --set imageTag="$version" \
  --set concourse.baggageclaimDriver="detect" \
  "$RELEASE_NAME" \
  . \
  --wait \
  --timeout 300

external_ip=$(kubectl get svc "$app" -o jsonpath='{.status.loadBalancer.ingress[0].ip}')

until curl -s -f "http://$external_ip:8080/api/v1/info"; do
  echo "Waiting for atc to be running ..."
  sleep 5
done

pod_name=$(kubectl get po -l app="$app" -o jsonpath='{.items[0].metadata.name}')
internal_ip=$(kubectl get po "$pod_name" -o jsonpath='{.status.podIP}')

bearer_token=$(curl -f -u fly:Zmx5 "http://$external_ip:8080/sky/token" -d "grant_type=password&username=$ATC_USERNAME&password=$ATC_PASSWORD&scope=openid+profile+email+federated:id+groups" | jq -r '.access_token')

until curl -s -f -H"Authorization:Bearer $bearer_token" "http://$external_ip:8080/api/v1/workers" | jq -r '.[] | .state' | grep 'running'; do
  echo "Waiting for worker to be running ..."
  sleep 5
done

ports=$(curl -H"Authorization:Bearer $bearer_token" "http://$external_ip:8080/api/v1/workers" | jq -r '.[] | .addr,.baggageclaim_url' | awk -F: '{print $NF}')

set -x

pids=""
for port in $ports; do
  iptables -t nat -A OUTPUT -m tcp -p tcp -d "$internal_ip" --dport "$port" -j DNAT --to-destination "127.0.0.1:$port"
  kubectl port-forward "$pod_name" "$port:$port" >/dev/null &
  pids+="$! "
done
trap "kill $pids" EXIT

popd

ATC_URL="http://$external_ip:8080" concourse/ci/scripts/testflight
